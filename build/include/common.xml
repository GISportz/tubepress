<?xml version="1.0"?>
<!--
/**
 * Copyright 2006 - 2014 TubePress LLC (http://tubepress.com)
 *
 * This file is part of TubePress (http://tubepress.com)
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
-->
<project name="tubepress-build-common">

    <!-- Store the path of our directory -->
	<dirname property="tubepress-build-common.basedir" file="${ant.file.tubepress-build-common}"/>

    <!-- Initialize some properties. -->
    <property file="${tubepress-build-common.basedir}/../config/common.properties" />
    <property file="config/custom.properties" />
	<property name="stagingdir"        value="stage/${build.directory.stage.basename}" />
	<property name="jscompresslist"    value="config/js-to-compress.txt" />
	<property name="csscompresslist"    value="config/css-to-compress.txt" />

    <target name="init" description="Cleans and preps the build directory for a new build">

        <!-- Clean up. -->
        <antcall target="clean" />

        <!-- Create the output directories. -->
        <echo message="Creating empty directories at dist and stage" />
        <mkdir dir="dist" />
        <mkdir dir="stage" />

    </target>

    <target name="clean" description="Cleans build environment">

        <echo message="Deleting dist and stage" />

        <delete dir="dist" />
        <delete dir="stage" />
    </target>

    <target name="stage-self" description="Copies over TubePress into the staging directory for processing">

        <echo message="Copying self into ${stagingdir}" />

        <copy todir="${stagingdir}">

            <fileset dir=".." excludesfile="${tubepress-build-common.basedir}/../config/distribution-exclusions.txt" />
        </copy>
        <property file="config/pro.properties" />
    </target>

    <target name="move-wordpress-skeleton" description="Copies WordPress resources into TubePress">

        <move todir="${stagingdir}">

            <fileset dir="${stagingdir}/src/core/integration/wordpress/resources/skeleton">
                <include name="**" />
            </fileset>
        </move>
    </target>

    <target name="suppress-directory-listings" description="Adds empty index.php files to various areas">

        <copy file="resources/directory-listing-suppressor.php" tofile="${stagingdir}/index.php" />

    </target>

    <target name="update-version-in-php-code">

        <replace file="${stagingdir}/src/core/app/environment/classes/tubepress/app/environment/impl/Environment.php" token="9.9.9" value="${version.major}.${version.minor}.${version.micro}" />

    </target>

    <target name="modify-wordpress-info">

        <replace file="${stagingdir}/tubepress.php" token="git-bleeding"    value="${version.major}.${version.minor}.${version.micro}" />
        <replace file="${stagingdir}/tubepress.php" token="@description@"   value="${wordpress.desc.suffix}" />
        <replace file="${stagingdir}/tubepress.php" token="@TubePress@"     value="${wordpress.desc.appname}" />
        <replace file="${stagingdir}/readme.txt"    token="@stableversion@" value="${version.major}.${version.minor}.${version.micro}" />

    </target>

    <target name="compress-private-js" description="Compresses JS files">

        <echo message="Compressing JS. This may take a moment..." />

        <apply executable="java" parallel="false" dir="${stagingdir}" relative="true">
            <fileset dir="${stagingdir}/" includesfile="${jscompresslist}"/>
            <arg line="-jar"/>
            <arg path="${tubepress-build-common.basedir}/../bin/yuicompressor-2.4.8.jar"/>
            <srcfile />
            <arg line="-o" />
            <mapper type="identity" />
            <targetfile />
        </apply>

    </target>

    <target name="compress-private-css" description="Compresses CSS files">

        <echo message="Compressing CSS. This may take a moment..." />

        <apply executable="java" parallel="false" dir="${stagingdir}" relative="true">
            <fileset dir="${stagingdir}/" includesfile="${csscompresslist}"/>
            <arg line="-jar"/>
            <arg path="${tubepress-build-common.basedir}/../bin/yuicompressor-2.4.8.jar"/>
            <srcfile />
            <arg line="-o" />
            <mapper type="identity" />
            <targetfile />
        </apply>

    </target>

	<target name="compress-js" description="Compresses JS files">

		<copy todir="${stagingdir}">
			<fileset dir="${stagingdir}/" includesfile="${jscompresslist}"/>
			<mapper type="glob" from="*.js" to="*-dev.js" />
		</copy>

        <antcall target="compress-private-js" />
	</target>

    <target name="compress-css" description="Compresses CSS files">

        <copy todir="${stagingdir}">
            <fileset dir="${stagingdir}/" includesfile="${csscompresslist}"/>
            <mapper type="glob" from="*.css" to="*-dev.css" />
        </copy>

        <antcall target="compress-private-css" />
    </target>

    <target name="php-version-compatability-mods">

        <replace dir="${stagingdir}" token="__DIR__" value="dirname(__FILE__)" />

    </target>

    <target name="strip-phpunit-from-composer">

        <exec dir="${stagingdir}" failonerror="true" searchpath="true" executable="sed" os="Linux">

            <arg value="-i" />
            <arg value="/\/phpunit\//d" />
            <arg value="vendor/composer/autoload_classmap.php" />
        </exec>

        <exec dir="${stagingdir}" failonerror="true" searchpath="true" executable="sed" os="Mac OS X">

            <arg value="-i" />
            <arg value="''" />
            <arg value="/\/phpunit\//d" />
            <arg value="vendor/composer/autoload_classmap.php" />
        </exec>
    </target>

    <target name="copy-locale-fallbacks">

        <copy file="${stagingdir}/src/translations/tubepress-es_ES.mo" tofile="${stagingdir}/src/translations/tubepress-es_MX.mo" />

    </target>

	<target name="package">

		<zip destfile="dist/${build.directory.stage.basename}_${version.major}_${version.minor}_${version.micro}.zip" basedir="stage" />

	</target>

    <target name="build-boot-classes-file">

        <exec dir="bin" failonerror="true" searchpath="true" executable="php">
            <arg value="./ClassCollectionBuilder.php" />
        </exec>

        <move file="../src/platform/scripts/classloading/classes.php" tofile="${stagingdir}/src/platform/scripts/classloading/classes.php" verbose="true"/>
    </target>

    <target name="stage-web-assets">

        <mkdir dir="${stagingdir}/web" />
        <mkdir dir="${stagingdir}/web/js" />

        <move file="${stagingdir}/src/core/app/options-ui/web"                tofile="${stagingdir}/web/options-ui"           verbose="true" />
        <move file="${stagingdir}/src/core/app/player/web/js/players"         tofile="${stagingdir}/web/players"              verbose="true" />
        <move file="${stagingdir}/src/core/app/player/web/vendor"             tofile="${stagingdir}/web/vendor"               verbose="true" />
        <move file="${stagingdir}/src/core/app/themes/web"                    tofile="${stagingdir}/web/themes"               verbose="true" />
        <move file="${stagingdir}/src/core/integration/wordpress/web/options-gui" tofile="${stagingdir}/web/options-ui/wordpress" verbose="true" />
        <move todir="${stagingdir}/web/js" verbose="true">
            <fileset dir="${stagingdir}/src/core/app/html/web/js" />
            <fileset dir="${stagingdir}/src/core/app/feature-gallery/web/js" />
            <fileset dir="${stagingdir}/src/core/integration/wordpress/web/js" />
            <mapper type="glob" from="*.js" to="*.js"/>
        </move>
        <copy file="${stagingdir}/index.php" tofile="${stagingdir}/web/index.php" />

    </target>

</project>
